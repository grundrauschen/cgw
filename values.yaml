# Default values for CGW.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
useEnvConfig: "HIDDEN_PUBIP_HOST"
setRouteDefaultTable: FALSE
ipsec:
  remoteip: 192.0.2.0
  remotenet: 192.168.23.0/24
  localprivip: "%any"
#  localpubip: ipsec.openvnf.com
  localnet: 192.168.24.0/24
  keyexchange: ikev2
  ikecipher: aes192gcm16-aes128gcm16-prfsha256-ecp256-ecp521,aes192-sha256-modp3072
  espcipher: aes192gcm16-aes128gcm16-ecp256,aes192-sha256-modp3072
  psk: secret
  forceudp: "yes"
  vti_key: 1304
replicaCount: 1
image:
  repository: openvnf/vnf-ipsec
  tag: 1.1.0
  pullPolicy: IfNotPresent
  pullSecrets:
    - name: werft
service:
  name: ipsec
  type: ClusterIP
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9427"
#  protocol: UDP
#  externalPort: 4500
#  internalPort: 4500
ingress:
  enabled: false
  # Used to create an Ingress record.
  hosts:
    - chart-example.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
  

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  initGre:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  initVti:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  ipsec:
    limits:
     cpu: 200m
     memory: 256Mi
    requests:
     cpu: 200m
     memory: 128Mi
  cgwExporter:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  pingProber:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  vxlanControllerAgent:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  vxlanControllerIpSetup:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi
  
  vxlanControllerAgentInit:
    limits:
     cpu: 50m
     memory: 64Mi
    requests:
     cpu: 50m
     memory: 64Mi

## Values used to set up GRE usage
gre:
  enabled: false
  localip: 192.0.2.1
  remoteip: 203.0.113.0
  name: gre9
  gretap: false

networkUtility:
  image:
    repository: travelping/nettools
    tag: 1.2.0
    pullPolicy: IfNotPresent

pingProber:
  image:
    repository: alpine
    tag: "3.7"
    pullPolicy: IfNotPresent

cgwExporter:
  image:
    repository: werft.tpip.net/grundrauschen/cgw-exporter
    tag: v0.2.0
    pullPolicy: IfNotPresent
  config:
    web:
      listen-address: ":9427"
      telemetry-path: "/metrics"
    dns:
      refresh: 1m

vxlan:
  enabled: false
  image:
    repository: travelping/vxlan-connector
    tag: 1.0.0
    pullPolicy: IfNotPresent

  connectors:
    - name: default
      peer: 192.0.2.2
      bridge: true
      bridged_ifaces: dum0815
      bridge_name: br0
      id: 100

vxlanController:
  enabled: false
  names: "vxeth0, vxeth1"
  image:
    repository: aialferov/kube-vxlan-controller-agent
    tag: 2.1.0
    pullPolicy: IfNotPresent
  #ip:
  #- interface: vxeth1
    #addr: "192.0.2.1/24"
    #type: ip
  #- interface: bridge0
    #type: bridge
    #bind:
      #- gre9
      #- vxeth0
